name: Generate Package
on:
  release:
    types: [published]
jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - Checkout
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        run: |
          cd frontend
          npm install
          npm run release

      - name: Get Latest Release
        id: latest
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: releases } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1,
            });
            return {
              upload_url: releases[0].upload_url,
            }

      - name: Upload Package
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.latest.outputs.upload_url }}
          asset_path: ./*
          asset_name: package.zip
          asset_content_type: application/zip
